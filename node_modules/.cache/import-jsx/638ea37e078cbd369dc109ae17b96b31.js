import React from 'react';
const {
  Text,
  Box,
  useInput
} = require("ink");
const TextInput = require("ink-text-input").default;
const App = ({
  name = 'Stranger'
}) => {
  const {
    useEffect,
    useState
  } = React;
  const [inputFields, setInputFields] = useState({
    inputText: '',
    outputText: ''
  });
  const [input, setInput] = useState();
  useInput((input, key) => {
    console.log("useInput handler called input", input);
    console.log("useInput handler called key", input);
    if (key.leftArrow) {
      // Left arrow key pressed
    }
    if (key.return) {
      console.log("rturn key was pressed");
    }
  });
  return /*#__PURE__*/React.createElement(Box, {
    flexDirection: 'column'
  }, /*#__PURE__*/React.createElement(Box, {
    borderStyle: "round",
    borderColor: "green"
  }, /*#__PURE__*/React.createElement(Text, null, "Welcome ")), /*#__PURE__*/React.createElement(TextInput, {
    placeholder: '',
    value: input,
    onChange: setInput
  }));
};
module.exports = App;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJSZWFjdCIsIlRleHQiLCJCb3giLCJ1c2VJbnB1dCIsInJlcXVpcmUiLCJUZXh0SW5wdXQiLCJkZWZhdWx0IiwiQXBwIiwibmFtZSIsInVzZUVmZmVjdCIsInVzZVN0YXRlIiwiaW5wdXRGaWVsZHMiLCJzZXRJbnB1dEZpZWxkcyIsImlucHV0VGV4dCIsIm91dHB1dFRleHQiLCJpbnB1dCIsInNldElucHV0Iiwia2V5IiwiY29uc29sZSIsImxvZyIsImxlZnRBcnJvdyIsInJldHVybiIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlcyI6WyJ1aS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCdcbmNvbnN0IHsgVGV4dCwgQm94LCB1c2VJbnB1dCB9ID0gcmVxdWlyZShcImlua1wiKTtcbmNvbnN0IFRleHRJbnB1dCA9IHJlcXVpcmUoXCJpbmstdGV4dC1pbnB1dFwiKS5kZWZhdWx0O1xuXG5jb25zdCBBcHAgPSAoe25hbWUgPSAnU3RyYW5nZXInfSkgPT4ge1xuXHRjb25zdCB7dXNlRWZmZWN0LCB1c2VTdGF0ZX0gPSBSZWFjdDtcblx0Y29uc3QgW2lucHV0RmllbGRzLCBzZXRJbnB1dEZpZWxkc10gPSB1c2VTdGF0ZSh7XG5cdFx0aW5wdXRUZXh0OiAnJyxcblx0XHRvdXRwdXRUZXh0OiAnJ1xuXG5cdH0pO1xuXHRjb25zdCBbaW5wdXQsIHNldElucHV0XSA9IHVzZVN0YXRlKCk7XG5cblx0dXNlSW5wdXQoKGlucHV0LCBrZXkpID0+IHtcblx0XHRjb25zb2xlLmxvZyhcInVzZUlucHV0IGhhbmRsZXIgY2FsbGVkIGlucHV0XCIsIGlucHV0KVxuXHRcdGNvbnNvbGUubG9nKFwidXNlSW5wdXQgaGFuZGxlciBjYWxsZWQga2V5XCIsIGlucHV0KVxuXG5cdFx0aWYgKGtleS5sZWZ0QXJyb3cpIHtcblx0XHRcdC8vIExlZnQgYXJyb3cga2V5IHByZXNzZWRcblx0XHR9XG5cdFx0aWYoa2V5LnJldHVybikge1xuXHRcdFx0Y29uc29sZS5sb2coXCJydHVybiBrZXkgd2FzIHByZXNzZWRcIilcblx0XHR9XG5cdH0pO1xuXG5cblx0cmV0dXJuIChcblx0XHQ8Qm94IGZsZXhEaXJlY3Rpb249eydjb2x1bW4nfT5cblx0XHRcdDxCb3ggYm9yZGVyU3R5bGU9XCJyb3VuZFwiIGJvcmRlckNvbG9yPVwiZ3JlZW5cIj5cblx0XHRcdFx0PFRleHQ+V2VsY29tZSA8L1RleHQ+XG5cdFx0XHQ8L0JveD5cblx0XHRcdDxUZXh0SW5wdXRcblx0XHRcdFx0cGxhY2Vob2xkZXI9eycnfVxuXHRcdFx0XHR2YWx1ZT17aW5wdXR9XG5cdFx0XHRcdG9uQ2hhbmdlPXtzZXRJbnB1dH1cblx0XHRcdC8+XG5cblx0XHQ8L0JveD5cblxuXHQpXG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IEFwcDtcbiJdLCJtYXBwaW5ncyI6IkFBQ0EsT0FBT0EsS0FBSyxNQUFNLE9BQU87QUFDekIsTUFBTTtFQUFFQyxJQUFJO0VBQUVDLEdBQUc7RUFBRUM7QUFBUyxDQUFDLEdBQUdDLE9BQU8sQ0FBQyxLQUFLLENBQUM7QUFDOUMsTUFBTUMsU0FBUyxHQUFHRCxPQUFPLENBQUMsZ0JBQWdCLENBQUMsQ0FBQ0UsT0FBTztBQUVuRCxNQUFNQyxHQUFHLEdBQUcsQ0FBQztFQUFDQyxJQUFJLEdBQUc7QUFBVSxDQUFDLEtBQUs7RUFDcEMsTUFBTTtJQUFDQyxTQUFTO0lBQUVDO0VBQVEsQ0FBQyxHQUFHVixLQUFLO0VBQ25DLE1BQU0sQ0FBQ1csV0FBVyxFQUFFQyxjQUFjLENBQUMsR0FBR0YsUUFBUSxDQUFDO0lBQzlDRyxTQUFTLEVBQUUsRUFBRTtJQUNiQyxVQUFVLEVBQUU7RUFFYixDQUFDLENBQUM7RUFDRixNQUFNLENBQUNDLEtBQUssRUFBRUMsUUFBUSxDQUFDLEdBQUdOLFFBQVEsRUFBRTtFQUVwQ1AsUUFBUSxDQUFDLENBQUNZLEtBQUssRUFBRUUsR0FBRyxLQUFLO0lBQ3hCQyxPQUFPLENBQUNDLEdBQUcsQ0FBQywrQkFBK0IsRUFBRUosS0FBSyxDQUFDO0lBQ25ERyxPQUFPLENBQUNDLEdBQUcsQ0FBQyw2QkFBNkIsRUFBRUosS0FBSyxDQUFDO0lBRWpELElBQUlFLEdBQUcsQ0FBQ0csU0FBUyxFQUFFO01BQ2xCO0lBQUE7SUFFRCxJQUFHSCxHQUFHLENBQUNJLE1BQU0sRUFBRTtNQUNkSCxPQUFPLENBQUNDLEdBQUcsQ0FBQyx1QkFBdUIsQ0FBQztJQUNyQztFQUNELENBQUMsQ0FBQztFQUdGLG9CQUNDLG9CQUFDLEdBQUc7SUFBQyxhQUFhLEVBQUU7RUFBUyxnQkFDNUIsb0JBQUMsR0FBRztJQUFDLFdBQVcsRUFBQyxPQUFPO0lBQUMsV0FBVyxFQUFDO0VBQU8sZ0JBQzNDLG9CQUFDLElBQUksbUJBQWdCLENBQ2hCLGVBQ04sb0JBQUMsU0FBUztJQUNULFdBQVcsRUFBRSxFQUFHO0lBQ2hCLEtBQUssRUFBRUosS0FBTTtJQUNiLFFBQVEsRUFBRUM7RUFBUyxFQUNsQixDQUVHO0FBR1IsQ0FBQztBQUVETSxNQUFNLENBQUNDLE9BQU8sR0FBR2hCLEdBQUcifQ==