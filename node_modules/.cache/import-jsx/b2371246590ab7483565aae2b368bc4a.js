const React = require('react');
const {
  Text,
  Box,
  useInput
} = require("ink");
const TextInput = require("ink-text-input").default;
const App = ({
  name = 'Stranger'
}) => {
  const {
    useEffect,
    useState
  } = React;
  const [currentName, setCurrentName] = useState('stranger');
  const [inputFields, setInputFields] = useState({
    'stranger': {
      inputData: [{
        inputText: '',
        outputText: '',
        statementType: ''
      }],
      balance: 0,
      owedMoney: 0,
      owedTo: '',
      owedFrom: ''
    }
  });
  const [currentInput, setCurrentInput] = useState('');
  useInput((input, key) => {
    if (key.leftArrow) {
      // Left arrow key pressed
    }
    if (key.return) {
      console.log("rturn key was pressed", currentInput);
      updateDataInState(currentInput);
    }
  });
  const updateDataInState = inputStr => {
    console.log("currentInput called line 32", inputStr);
    console.log("currentInput called line 33 inputStr.includes('login')", inputStr.includes('login'));
    console.log("currentInput called line 34 inputStr.indexOf('login') > -", inputStr.indexOf('login') !== -1);
    // switch (inputStr) {
    if (inputStr.includes('login')) {
      console.log("in login");
      return 1;
    } else if (inputStr.includes('logout')) {
      console.log("in logout");
      return 1;
    } else if (inputStr.includes('deposit')) {
      console.log("in deposit");
      return 1;
    } else if (inputStr.includes('transfer')) {
      console.log("in transfer");
      return 1;
    }
  };
  const currentData = inputFields[currentName];
  console.log("currentData", currentData);
  const fields = [];
  return /*#__PURE__*/React.createElement(Box, {
    flexDirection: 'column'
  }, /*#__PURE__*/React.createElement(Box, {
    borderStyle: "round",
    borderColor: "green"
  }, /*#__PURE__*/React.createElement(Text, null, "Welcome ")), fields?.map((field, index) => {
    return /*#__PURE__*/React.createElement(Box, {
      flexDirection: 'column',
      key: index
    }, /*#__PURE__*/React.createElement(TextInput, {
      placeholder: '',
      value: currentInput,
      onChange: setCurrentInput
    }), /*#__PURE__*/React.createElement(Text, null, field.outputText));
  }));
};
module.exports = App;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJSZWFjdCIsInJlcXVpcmUiLCJUZXh0IiwiQm94IiwidXNlSW5wdXQiLCJUZXh0SW5wdXQiLCJkZWZhdWx0IiwiQXBwIiwibmFtZSIsInVzZUVmZmVjdCIsInVzZVN0YXRlIiwiY3VycmVudE5hbWUiLCJzZXRDdXJyZW50TmFtZSIsImlucHV0RmllbGRzIiwic2V0SW5wdXRGaWVsZHMiLCJpbnB1dERhdGEiLCJpbnB1dFRleHQiLCJvdXRwdXRUZXh0Iiwic3RhdGVtZW50VHlwZSIsImJhbGFuY2UiLCJvd2VkTW9uZXkiLCJvd2VkVG8iLCJvd2VkRnJvbSIsImN1cnJlbnRJbnB1dCIsInNldEN1cnJlbnRJbnB1dCIsImlucHV0Iiwia2V5IiwibGVmdEFycm93IiwicmV0dXJuIiwiY29uc29sZSIsImxvZyIsInVwZGF0ZURhdGFJblN0YXRlIiwiaW5wdXRTdHIiLCJpbmNsdWRlcyIsImluZGV4T2YiLCJjdXJyZW50RGF0YSIsImZpZWxkcyIsIm1hcCIsImZpZWxkIiwiaW5kZXgiLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZXMiOlsidWkuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXG5jb25zdCBSZWFjdCA9IHJlcXVpcmUoJ3JlYWN0Jyk7XG5jb25zdCB7IFRleHQsIEJveCwgdXNlSW5wdXQgfSA9IHJlcXVpcmUoXCJpbmtcIik7XG5jb25zdCBUZXh0SW5wdXQgPSByZXF1aXJlKFwiaW5rLXRleHQtaW5wdXRcIikuZGVmYXVsdDtcblxuY29uc3QgQXBwID0gKHtuYW1lID0gJ1N0cmFuZ2VyJ30pID0+IHtcblx0Y29uc3Qge3VzZUVmZmVjdCwgdXNlU3RhdGV9ID0gUmVhY3Q7XG5cdGNvbnN0IFtjdXJyZW50TmFtZSwgc2V0Q3VycmVudE5hbWVdID0gdXNlU3RhdGUoJ3N0cmFuZ2VyJyk7XG5cdGNvbnN0IFtpbnB1dEZpZWxkcywgc2V0SW5wdXRGaWVsZHNdID0gdXNlU3RhdGUoe1xuXHRcdCdzdHJhbmdlcic6IHtcblx0XHRcdGlucHV0RGF0YTogW3tcblx0XHRcdFx0aW5wdXRUZXh0OiAnJyxcblx0XHRcdFx0b3V0cHV0VGV4dDogJycsXG5cdFx0XHRcdHN0YXRlbWVudFR5cGU6ICcnLFxuXHRcdFx0fV0sXG5cdFx0XHRiYWxhbmNlOiAwLFxuXHRcdFx0b3dlZE1vbmV5OiAwLFxuXHRcdFx0b3dlZFRvOiAnJyxcblx0XHRcdG93ZWRGcm9tOiAnJyxcblx0XHR9XG5cblx0fSk7XG5cdGNvbnN0IFtjdXJyZW50SW5wdXQsIHNldEN1cnJlbnRJbnB1dF0gPSB1c2VTdGF0ZSgnJyk7XG5cblx0dXNlSW5wdXQoKGlucHV0LCBrZXkpID0+IHtcblxuXG5cdFx0aWYgKGtleS5sZWZ0QXJyb3cpIHtcblx0XHRcdC8vIExlZnQgYXJyb3cga2V5IHByZXNzZWRcblx0XHR9XG5cblx0XHRpZihrZXkucmV0dXJuKSB7XG5cdFx0XHRjb25zb2xlLmxvZyhcInJ0dXJuIGtleSB3YXMgcHJlc3NlZFwiLCBjdXJyZW50SW5wdXQpXG5cdFx0XHR1cGRhdGVEYXRhSW5TdGF0ZShjdXJyZW50SW5wdXQpXG5cdFx0fVxuXG5cdH0pO1xuXG5cdGNvbnN0ICB1cGRhdGVEYXRhSW5TdGF0ZSA9IChpbnB1dFN0cikgPT4ge1xuXHRcdGNvbnNvbGUubG9nKFwiY3VycmVudElucHV0IGNhbGxlZCBsaW5lIDMyXCIsIGlucHV0U3RyKVxuXHRcdGNvbnNvbGUubG9nKFwiY3VycmVudElucHV0IGNhbGxlZCBsaW5lIDMzIGlucHV0U3RyLmluY2x1ZGVzKCdsb2dpbicpXCIsIGlucHV0U3RyLmluY2x1ZGVzKCdsb2dpbicpKTtcblx0XHRjb25zb2xlLmxvZyhcImN1cnJlbnRJbnB1dCBjYWxsZWQgbGluZSAzNCBpbnB1dFN0ci5pbmRleE9mKCdsb2dpbicpID4gLVwiLCBpbnB1dFN0ci5pbmRleE9mKCdsb2dpbicpICE9PSAtMSk7XG5cdFx0Ly8gc3dpdGNoIChpbnB1dFN0cikge1xuXHRcdFx0aWYoaW5wdXRTdHIuaW5jbHVkZXMoJ2xvZ2luJykpIHtcblx0XHRcdFx0Y29uc29sZS5sb2coXCJpbiBsb2dpblwiKVxuXHRcdFx0XHRyZXR1cm4gMTtcblx0XHRcdH1cblx0XHRcdGVsc2UgaWYoaW5wdXRTdHIuaW5jbHVkZXMoJ2xvZ291dCcpKSB7XG5cdFx0XHRcdGNvbnNvbGUubG9nKFwiaW4gbG9nb3V0XCIpXG5cblx0XHRcdFx0cmV0dXJuIDE7XG5cdFx0XHR9XG5cdFx0XHRlbHNlIGlmKGlucHV0U3RyLmluY2x1ZGVzKCdkZXBvc2l0JykpIHtcblx0XHRcdFx0Y29uc29sZS5sb2coXCJpbiBkZXBvc2l0XCIpXG5cdFx0XHRcdHJldHVybiAxO1xuXHRcdFx0fVxuXHRcdFx0ZWxzZSBpZihpbnB1dFN0ci5pbmNsdWRlcygndHJhbnNmZXInKSkge1xuXHRcdFx0XHRjb25zb2xlLmxvZyhcImluIHRyYW5zZmVyXCIpXG5cdFx0XHRcdHJldHVybiAxO1xuXHRcdFx0fVxuXHR9XG5cdGNvbnN0IGN1cnJlbnREYXRhID0gaW5wdXRGaWVsZHNbY3VycmVudE5hbWVdO1xuXHRjb25zb2xlLmxvZyhcImN1cnJlbnREYXRhXCIsIGN1cnJlbnREYXRhKTtcblx0Y29uc3QgZmllbGRzID0gW11cblx0cmV0dXJuIChcblxuXHRcdDxCb3ggZmxleERpcmVjdGlvbj17J2NvbHVtbid9PlxuXHRcdFx0PEJveCBib3JkZXJTdHlsZT1cInJvdW5kXCIgYm9yZGVyQ29sb3I9XCJncmVlblwiPlxuXHRcdFx0XHQ8VGV4dD5XZWxjb21lIDwvVGV4dD5cblx0XHRcdDwvQm94PlxuXHRcdFx0e2ZpZWxkcz8ubWFwKChmaWVsZCwgaW5kZXgpPT4ge1xuXHRcdFx0XHRyZXR1cm4oXG5cdFx0XHRcdFx0PEJveCBmbGV4RGlyZWN0aW9uPXsnY29sdW1uJ31cblx0XHRcdFx0XHRcdCBrZXk9e2luZGV4fT5cblx0XHRcdFx0XHQ8VGV4dElucHV0XG5cdFx0XHRcdFx0XHRwbGFjZWhvbGRlcj17Jyd9XG5cdFx0XHRcdFx0XHR2YWx1ZT17Y3VycmVudElucHV0fVxuXHRcdFx0XHRcdFx0b25DaGFuZ2U9e3NldEN1cnJlbnRJbnB1dH1cblx0XHRcdFx0XHQvPlxuXHRcdFx0XHRcdFx0PFRleHQ+e2ZpZWxkLm91dHB1dFRleHR9PC9UZXh0PlxuXHRcdFx0XHRcdDwvQm94PlxuXHRcdFx0XHQpXG5cdFx0XHR9KX1cblxuXG5cdFx0PC9Cb3g+XG5cblx0KVxufTtcblxubW9kdWxlLmV4cG9ydHMgPSBBcHA7XG4iXSwibWFwcGluZ3MiOiJBQUNBLE1BQU1BLEtBQUssR0FBR0MsT0FBTyxDQUFDLE9BQU8sQ0FBQztBQUM5QixNQUFNO0VBQUVDLElBQUk7RUFBRUMsR0FBRztFQUFFQztBQUFTLENBQUMsR0FBR0gsT0FBTyxDQUFDLEtBQUssQ0FBQztBQUM5QyxNQUFNSSxTQUFTLEdBQUdKLE9BQU8sQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFDSyxPQUFPO0FBRW5ELE1BQU1DLEdBQUcsR0FBRyxDQUFDO0VBQUNDLElBQUksR0FBRztBQUFVLENBQUMsS0FBSztFQUNwQyxNQUFNO0lBQUNDLFNBQVM7SUFBRUM7RUFBUSxDQUFDLEdBQUdWLEtBQUs7RUFDbkMsTUFBTSxDQUFDVyxXQUFXLEVBQUVDLGNBQWMsQ0FBQyxHQUFHRixRQUFRLENBQUMsVUFBVSxDQUFDO0VBQzFELE1BQU0sQ0FBQ0csV0FBVyxFQUFFQyxjQUFjLENBQUMsR0FBR0osUUFBUSxDQUFDO0lBQzlDLFVBQVUsRUFBRTtNQUNYSyxTQUFTLEVBQUUsQ0FBQztRQUNYQyxTQUFTLEVBQUUsRUFBRTtRQUNiQyxVQUFVLEVBQUUsRUFBRTtRQUNkQyxhQUFhLEVBQUU7TUFDaEIsQ0FBQyxDQUFDO01BQ0ZDLE9BQU8sRUFBRSxDQUFDO01BQ1ZDLFNBQVMsRUFBRSxDQUFDO01BQ1pDLE1BQU0sRUFBRSxFQUFFO01BQ1ZDLFFBQVEsRUFBRTtJQUNYO0VBRUQsQ0FBQyxDQUFDO0VBQ0YsTUFBTSxDQUFDQyxZQUFZLEVBQUVDLGVBQWUsQ0FBQyxHQUFHZCxRQUFRLENBQUMsRUFBRSxDQUFDO0VBRXBETixRQUFRLENBQUMsQ0FBQ3FCLEtBQUssRUFBRUMsR0FBRyxLQUFLO0lBR3hCLElBQUlBLEdBQUcsQ0FBQ0MsU0FBUyxFQUFFO01BQ2xCO0lBQUE7SUFHRCxJQUFHRCxHQUFHLENBQUNFLE1BQU0sRUFBRTtNQUNkQyxPQUFPLENBQUNDLEdBQUcsQ0FBQyx1QkFBdUIsRUFBRVAsWUFBWSxDQUFDO01BQ2xEUSxpQkFBaUIsQ0FBQ1IsWUFBWSxDQUFDO0lBQ2hDO0VBRUQsQ0FBQyxDQUFDO0VBRUYsTUFBT1EsaUJBQWlCLEdBQUlDLFFBQVEsSUFBSztJQUN4Q0gsT0FBTyxDQUFDQyxHQUFHLENBQUMsNkJBQTZCLEVBQUVFLFFBQVEsQ0FBQztJQUNwREgsT0FBTyxDQUFDQyxHQUFHLENBQUMsd0RBQXdELEVBQUVFLFFBQVEsQ0FBQ0MsUUFBUSxDQUFDLE9BQU8sQ0FBQyxDQUFDO0lBQ2pHSixPQUFPLENBQUNDLEdBQUcsQ0FBQywyREFBMkQsRUFBRUUsUUFBUSxDQUFDRSxPQUFPLENBQUMsT0FBTyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUM7SUFDMUc7SUFDQyxJQUFHRixRQUFRLENBQUNDLFFBQVEsQ0FBQyxPQUFPLENBQUMsRUFBRTtNQUM5QkosT0FBTyxDQUFDQyxHQUFHLENBQUMsVUFBVSxDQUFDO01BQ3ZCLE9BQU8sQ0FBQztJQUNULENBQUMsTUFDSSxJQUFHRSxRQUFRLENBQUNDLFFBQVEsQ0FBQyxRQUFRLENBQUMsRUFBRTtNQUNwQ0osT0FBTyxDQUFDQyxHQUFHLENBQUMsV0FBVyxDQUFDO01BRXhCLE9BQU8sQ0FBQztJQUNULENBQUMsTUFDSSxJQUFHRSxRQUFRLENBQUNDLFFBQVEsQ0FBQyxTQUFTLENBQUMsRUFBRTtNQUNyQ0osT0FBTyxDQUFDQyxHQUFHLENBQUMsWUFBWSxDQUFDO01BQ3pCLE9BQU8sQ0FBQztJQUNULENBQUMsTUFDSSxJQUFHRSxRQUFRLENBQUNDLFFBQVEsQ0FBQyxVQUFVLENBQUMsRUFBRTtNQUN0Q0osT0FBTyxDQUFDQyxHQUFHLENBQUMsYUFBYSxDQUFDO01BQzFCLE9BQU8sQ0FBQztJQUNUO0VBQ0YsQ0FBQztFQUNELE1BQU1LLFdBQVcsR0FBR3RCLFdBQVcsQ0FBQ0YsV0FBVyxDQUFDO0VBQzVDa0IsT0FBTyxDQUFDQyxHQUFHLENBQUMsYUFBYSxFQUFFSyxXQUFXLENBQUM7RUFDdkMsTUFBTUMsTUFBTSxHQUFHLEVBQUU7RUFDakIsb0JBRUMsb0JBQUMsR0FBRztJQUFDLGFBQWEsRUFBRTtFQUFTLGdCQUM1QixvQkFBQyxHQUFHO0lBQUMsV0FBVyxFQUFDLE9BQU87SUFBQyxXQUFXLEVBQUM7RUFBTyxnQkFDM0Msb0JBQUMsSUFBSSxtQkFBZ0IsQ0FDaEIsRUFDTEEsTUFBTSxFQUFFQyxHQUFHLENBQUMsQ0FBQ0MsS0FBSyxFQUFFQyxLQUFLLEtBQUk7SUFDN0Isb0JBQ0Msb0JBQUMsR0FBRztNQUFDLGFBQWEsRUFBRSxRQUFTO01BQzNCLEdBQUcsRUFBRUE7SUFBTSxnQkFDYixvQkFBQyxTQUFTO01BQ1QsV0FBVyxFQUFFLEVBQUc7TUFDaEIsS0FBSyxFQUFFaEIsWUFBYTtNQUNwQixRQUFRLEVBQUVDO0lBQWdCLEVBQ3pCLGVBQ0Qsb0JBQUMsSUFBSSxRQUFFYyxLQUFLLENBQUNyQixVQUFVLENBQVEsQ0FDMUI7RUFFUixDQUFDLENBQUMsQ0FHRztBQUdSLENBQUM7QUFFRHVCLE1BQU0sQ0FBQ0MsT0FBTyxHQUFHbEMsR0FBRyJ9