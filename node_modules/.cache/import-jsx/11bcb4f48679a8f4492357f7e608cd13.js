//
// const React = require('react');
// const { Text, Box, useInput, Newline } = require("ink");
// const TextInput = require("ink-text-input").default;
//
// const App = ({name = 'Stranger'}) => {
// 	const dummyInputData = []
// 	const {useEffect, useState} = React;
// 	const [currentName, setCurrentName] = useState('stranger');
// 	const [inputFields, setInputFields] = useState({});
// 	const [currentInput, setCurrentInput] = useState('');
//
// 	useInput((input, key) => {
// 		if(key.return) {
// 			console.log("rturn key was pressed", currentInput)
// 			updateDataInState(currentInput)
// 		}
//
// 	});
//
//
// 	const getData = (name) => {
// 		name = name || currentName;
// 		return inputFields[name]
// 	}
// 	const createNewNameData = (obj) => {
// 		const{ name, balance = 0, owedMoney=0} = obj;
// 		 return {
// 			[name] : {
// 				inputData: [{
// 					inputType: 'login',
// 					inputText: `login ${name}`,
// 					outputText: `Hello, ${name}! \nYour balance is ${balance}`
// 				}],
// 				balance:0,
// 				owedMoney: 0,
// 				owedTo: '',
// 				owedFrom: '',
// 			}
// 		}
// 		}
//
//
// 	const  updateDataInState = (inputStr) => {
// 			if(inputStr.includes('login')) {
// 				console.log("in login")
// 				const name = inputStr.split(' ')[1]
// 				const getDataFromState = getData(name)
//
// 				// if(!getDataFromState) {
// 				// 	const createdData = createNewNameData({name}) ;
// 				// 	setInputFields({...inputFields, ...createdData})
// 				// 	setCurrentName(name)
// 				// 	setCurrentInput('')
// 				// }
//
//
// 				return 1;
// 			}
// 			else if(inputStr.includes('logout')) {
// 				console.log("in logout")
//
// 				return 1;
// 			}
// 			else if(inputStr.includes('deposit')) {
// 				console.log("in deposit")
// 				const getDataFromState = getData(name)
// 				return 1;
// 			}
// 			else if(inputStr.includes('transfer')) {
// 				console.log("in transfer")
// 				return 1;
// 			}
// 	}
//
// 	const currentData = getData();
// 	return (
// 		<Box flexDirection={'column'}>
// 			<Box flexDirection={'column'}>
// 			{/*{currentData?.inputData?.map((field, index)=> {*/}
// 			{/*	return(*/}
// 			{/*		<Box flexDirection={'column'}*/}
// 			{/*			 key={index}>*/}
// 			{/*			<Text>*/}
// 			{/*				{field.inputText}*/}
// 			{/*			</Text>*/}
// 			{/*			<Newline />*/}
// 			{/*			<Text>*/}
// 			{/*				{field.outputText}*/}
// 			{/*			</Text>*/}
// 			{/*		</Box>*/}
// 			{/*	)*/}
// 			{/*})}*/}
// 			</Box>
// 			<Box flexDirection={'column'}>
// 				<TextInput
// 					placeholder={''}
// 					value={currentInput}
// 					onChange={setCurrentInput}
// 				/>
// 				<Newline />
// 			</Box>
// 		</Box>
// 	)
// };
//
// module.exports = App;
"use strict";

const React = require("react");
const {
  Text,
  Box
} = require("ink");
const App = ({
  name = "Stranger",
  from = "London"
}) => /*#__PURE__*/React.createElement(Box, {
  borderStyle: "round",
  borderColor: "yellow"
}, /*#__PURE__*/React.createElement(Text, null, "Hello,", "", /*#__PURE__*/React.createElement(Text, {
  color: "green"
}, name, " from ", from)));
module.exports = App;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJSZWFjdCIsInJlcXVpcmUiLCJUZXh0IiwiQm94IiwiQXBwIiwibmFtZSIsImZyb20iLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZXMiOlsidWkuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy9cbi8vIGNvbnN0IFJlYWN0ID0gcmVxdWlyZSgncmVhY3QnKTtcbi8vIGNvbnN0IHsgVGV4dCwgQm94LCB1c2VJbnB1dCwgTmV3bGluZSB9ID0gcmVxdWlyZShcImlua1wiKTtcbi8vIGNvbnN0IFRleHRJbnB1dCA9IHJlcXVpcmUoXCJpbmstdGV4dC1pbnB1dFwiKS5kZWZhdWx0O1xuLy9cbi8vIGNvbnN0IEFwcCA9ICh7bmFtZSA9ICdTdHJhbmdlcid9KSA9PiB7XG4vLyBcdGNvbnN0IGR1bW15SW5wdXREYXRhID0gW11cbi8vIFx0Y29uc3Qge3VzZUVmZmVjdCwgdXNlU3RhdGV9ID0gUmVhY3Q7XG4vLyBcdGNvbnN0IFtjdXJyZW50TmFtZSwgc2V0Q3VycmVudE5hbWVdID0gdXNlU3RhdGUoJ3N0cmFuZ2VyJyk7XG4vLyBcdGNvbnN0IFtpbnB1dEZpZWxkcywgc2V0SW5wdXRGaWVsZHNdID0gdXNlU3RhdGUoe30pO1xuLy8gXHRjb25zdCBbY3VycmVudElucHV0LCBzZXRDdXJyZW50SW5wdXRdID0gdXNlU3RhdGUoJycpO1xuLy9cbi8vIFx0dXNlSW5wdXQoKGlucHV0LCBrZXkpID0+IHtcbi8vIFx0XHRpZihrZXkucmV0dXJuKSB7XG4vLyBcdFx0XHRjb25zb2xlLmxvZyhcInJ0dXJuIGtleSB3YXMgcHJlc3NlZFwiLCBjdXJyZW50SW5wdXQpXG4vLyBcdFx0XHR1cGRhdGVEYXRhSW5TdGF0ZShjdXJyZW50SW5wdXQpXG4vLyBcdFx0fVxuLy9cbi8vIFx0fSk7XG4vL1xuLy9cbi8vIFx0Y29uc3QgZ2V0RGF0YSA9IChuYW1lKSA9PiB7XG4vLyBcdFx0bmFtZSA9IG5hbWUgfHwgY3VycmVudE5hbWU7XG4vLyBcdFx0cmV0dXJuIGlucHV0RmllbGRzW25hbWVdXG4vLyBcdH1cbi8vIFx0Y29uc3QgY3JlYXRlTmV3TmFtZURhdGEgPSAob2JqKSA9PiB7XG4vLyBcdFx0Y29uc3R7IG5hbWUsIGJhbGFuY2UgPSAwLCBvd2VkTW9uZXk9MH0gPSBvYmo7XG4vLyBcdFx0IHJldHVybiB7XG4vLyBcdFx0XHRbbmFtZV0gOiB7XG4vLyBcdFx0XHRcdGlucHV0RGF0YTogW3tcbi8vIFx0XHRcdFx0XHRpbnB1dFR5cGU6ICdsb2dpbicsXG4vLyBcdFx0XHRcdFx0aW5wdXRUZXh0OiBgbG9naW4gJHtuYW1lfWAsXG4vLyBcdFx0XHRcdFx0b3V0cHV0VGV4dDogYEhlbGxvLCAke25hbWV9ISBcXG5Zb3VyIGJhbGFuY2UgaXMgJHtiYWxhbmNlfWBcbi8vIFx0XHRcdFx0fV0sXG4vLyBcdFx0XHRcdGJhbGFuY2U6MCxcbi8vIFx0XHRcdFx0b3dlZE1vbmV5OiAwLFxuLy8gXHRcdFx0XHRvd2VkVG86ICcnLFxuLy8gXHRcdFx0XHRvd2VkRnJvbTogJycsXG4vLyBcdFx0XHR9XG4vLyBcdFx0fVxuLy8gXHRcdH1cbi8vXG4vL1xuLy8gXHRjb25zdCAgdXBkYXRlRGF0YUluU3RhdGUgPSAoaW5wdXRTdHIpID0+IHtcbi8vIFx0XHRcdGlmKGlucHV0U3RyLmluY2x1ZGVzKCdsb2dpbicpKSB7XG4vLyBcdFx0XHRcdGNvbnNvbGUubG9nKFwiaW4gbG9naW5cIilcbi8vIFx0XHRcdFx0Y29uc3QgbmFtZSA9IGlucHV0U3RyLnNwbGl0KCcgJylbMV1cbi8vIFx0XHRcdFx0Y29uc3QgZ2V0RGF0YUZyb21TdGF0ZSA9IGdldERhdGEobmFtZSlcbi8vXG4vLyBcdFx0XHRcdC8vIGlmKCFnZXREYXRhRnJvbVN0YXRlKSB7XG4vLyBcdFx0XHRcdC8vIFx0Y29uc3QgY3JlYXRlZERhdGEgPSBjcmVhdGVOZXdOYW1lRGF0YSh7bmFtZX0pIDtcbi8vIFx0XHRcdFx0Ly8gXHRzZXRJbnB1dEZpZWxkcyh7Li4uaW5wdXRGaWVsZHMsIC4uLmNyZWF0ZWREYXRhfSlcbi8vIFx0XHRcdFx0Ly8gXHRzZXRDdXJyZW50TmFtZShuYW1lKVxuLy8gXHRcdFx0XHQvLyBcdHNldEN1cnJlbnRJbnB1dCgnJylcbi8vIFx0XHRcdFx0Ly8gfVxuLy9cbi8vXG4vLyBcdFx0XHRcdHJldHVybiAxO1xuLy8gXHRcdFx0fVxuLy8gXHRcdFx0ZWxzZSBpZihpbnB1dFN0ci5pbmNsdWRlcygnbG9nb3V0JykpIHtcbi8vIFx0XHRcdFx0Y29uc29sZS5sb2coXCJpbiBsb2dvdXRcIilcbi8vXG4vLyBcdFx0XHRcdHJldHVybiAxO1xuLy8gXHRcdFx0fVxuLy8gXHRcdFx0ZWxzZSBpZihpbnB1dFN0ci5pbmNsdWRlcygnZGVwb3NpdCcpKSB7XG4vLyBcdFx0XHRcdGNvbnNvbGUubG9nKFwiaW4gZGVwb3NpdFwiKVxuLy8gXHRcdFx0XHRjb25zdCBnZXREYXRhRnJvbVN0YXRlID0gZ2V0RGF0YShuYW1lKVxuLy8gXHRcdFx0XHRyZXR1cm4gMTtcbi8vIFx0XHRcdH1cbi8vIFx0XHRcdGVsc2UgaWYoaW5wdXRTdHIuaW5jbHVkZXMoJ3RyYW5zZmVyJykpIHtcbi8vIFx0XHRcdFx0Y29uc29sZS5sb2coXCJpbiB0cmFuc2ZlclwiKVxuLy8gXHRcdFx0XHRyZXR1cm4gMTtcbi8vIFx0XHRcdH1cbi8vIFx0fVxuLy9cbi8vIFx0Y29uc3QgY3VycmVudERhdGEgPSBnZXREYXRhKCk7XG4vLyBcdHJldHVybiAoXG4vLyBcdFx0PEJveCBmbGV4RGlyZWN0aW9uPXsnY29sdW1uJ30+XG4vLyBcdFx0XHQ8Qm94IGZsZXhEaXJlY3Rpb249eydjb2x1bW4nfT5cbi8vIFx0XHRcdHsvKntjdXJyZW50RGF0YT8uaW5wdXREYXRhPy5tYXAoKGZpZWxkLCBpbmRleCk9PiB7Ki99XG4vLyBcdFx0XHR7LypcdHJldHVybigqL31cbi8vIFx0XHRcdHsvKlx0XHQ8Qm94IGZsZXhEaXJlY3Rpb249eydjb2x1bW4nfSovfVxuLy8gXHRcdFx0ey8qXHRcdFx0IGtleT17aW5kZXh9PiovfVxuLy8gXHRcdFx0ey8qXHRcdFx0PFRleHQ+Ki99XG4vLyBcdFx0XHR7LypcdFx0XHRcdHtmaWVsZC5pbnB1dFRleHR9Ki99XG4vLyBcdFx0XHR7LypcdFx0XHQ8L1RleHQ+Ki99XG4vLyBcdFx0XHR7LypcdFx0XHQ8TmV3bGluZSAvPiovfVxuLy8gXHRcdFx0ey8qXHRcdFx0PFRleHQ+Ki99XG4vLyBcdFx0XHR7LypcdFx0XHRcdHtmaWVsZC5vdXRwdXRUZXh0fSovfVxuLy8gXHRcdFx0ey8qXHRcdFx0PC9UZXh0PiovfVxuLy8gXHRcdFx0ey8qXHRcdDwvQm94PiovfVxuLy8gXHRcdFx0ey8qXHQpKi99XG4vLyBcdFx0XHR7Lyp9KX0qL31cbi8vIFx0XHRcdDwvQm94PlxuLy8gXHRcdFx0PEJveCBmbGV4RGlyZWN0aW9uPXsnY29sdW1uJ30+XG4vLyBcdFx0XHRcdDxUZXh0SW5wdXRcbi8vIFx0XHRcdFx0XHRwbGFjZWhvbGRlcj17Jyd9XG4vLyBcdFx0XHRcdFx0dmFsdWU9e2N1cnJlbnRJbnB1dH1cbi8vIFx0XHRcdFx0XHRvbkNoYW5nZT17c2V0Q3VycmVudElucHV0fVxuLy8gXHRcdFx0XHQvPlxuLy8gXHRcdFx0XHQ8TmV3bGluZSAvPlxuLy8gXHRcdFx0PC9Cb3g+XG4vLyBcdFx0PC9Cb3g+XG4vLyBcdClcbi8vIH07XG4vL1xuLy8gbW9kdWxlLmV4cG9ydHMgPSBBcHA7XG5cInVzZSBzdHJpY3RcIjtcbmNvbnN0IFJlYWN0ID0gcmVxdWlyZShcInJlYWN0XCIpO1xuY29uc3QgeyBUZXh0LCBCb3ggfSA9IHJlcXVpcmUoXCJpbmtcIik7XG5jb25zdCBBcHAgPSAoeyBuYW1lID0gXCJTdHJhbmdlclwiLCBmcm9tID0gXCJMb25kb25cIiB9KSA9PiAoXG5cdDxCb3ggYm9yZGVyU3R5bGU9XCJyb3VuZFwiIGJvcmRlckNvbG9yPVwieWVsbG93XCI+XG5cdFx0PFRleHQ+XG5cdFx0XHRIZWxsbyx7XCJcIn1cblx0XHRcdDxUZXh0IGNvbG9yPVwiZ3JlZW5cIj5cblx0XHRcdFx0e25hbWV9IGZyb20ge2Zyb219XG5cdFx0XHQ8L1RleHQ+XG5cdFx0PC9UZXh0PlxuXHQ8L0JveD5cbik7XG5tb2R1bGUuZXhwb3J0cyA9IEFwcDtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVk7O0FBQ1osTUFBTUEsS0FBSyxHQUFHQyxPQUFPLENBQUMsT0FBTyxDQUFDO0FBQzlCLE1BQU07RUFBRUMsSUFBSTtFQUFFQztBQUFJLENBQUMsR0FBR0YsT0FBTyxDQUFDLEtBQUssQ0FBQztBQUNwQyxNQUFNRyxHQUFHLEdBQUcsQ0FBQztFQUFFQyxJQUFJLEdBQUcsVUFBVTtFQUFFQyxJQUFJLEdBQUc7QUFBUyxDQUFDLGtCQUNsRCxvQkFBQyxHQUFHO0VBQUMsV0FBVyxFQUFDLE9BQU87RUFBQyxXQUFXLEVBQUM7QUFBUSxnQkFDNUMsb0JBQUMsSUFBSSxrQkFDRyxFQUFFLGVBQ1Qsb0JBQUMsSUFBSTtFQUFDLEtBQUssRUFBQztBQUFPLEdBQ2pCRCxJQUFJLFlBQVFDLElBQUksQ0FDWCxDQUNELENBRVI7QUFDREMsTUFBTSxDQUFDQyxPQUFPLEdBQUdKLEdBQUcifQ==